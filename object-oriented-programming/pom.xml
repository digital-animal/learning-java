<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.zahid</groupId>
  <artifactId>datatype-operator-expression</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>
  <name>learning-java</name>
  <url>http://maven.apache.org</url>
  
  <!-- # Java Version, JUnit5 Version, UTF-8 Encoding --> 
  <properties>
    <maven.compiler.target>11</maven.compiler.target>
    <maven.compiler.source>11</maven.compiler.source>
    <junit.jupiter.version>5.8.1</junit.jupiter.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <!-- <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding> -->
  </properties>

  <build>
    <pluginManagement>
      <plugins>
      
	      <!-- # maven exec plugin for running main with custom configuration -->
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.0.0</version>
            <configuration>
                <mainClass>com.zahid.Main</mainClass>
                <mainClass>com.zahid.abstractclass1.AbstractTest</mainClass>
                <mainClass>com.zahid.abstractclass2.AnimalTest</mainClass>
                <mainClass>com.zahid.abstractclass3.MathTest</mainClass>
                <mainClass>com.zahid.abstractclass4.AbstractTest</mainClass>
                <mainClass>com.zahid.accessormutator.GetterSetterTest</mainClass>
                <mainClass>com.zahid.account.AccountTest</mainClass>
                <mainClass>com.zahid.animal.AnimalTest</mainClass>
                <mainClass>com.zahid.calculator1.CalculatorTest</mainClass>
                <mainClass>com.zahid.calculator2.CalcTest</mainClass>
                <mainClass>com.zahid.circular1.CircularTest</mainClass>
                <mainClass>com.zahid.circular2.CircularTest</mainClass>
                <mainClass>com.zahid.comaparable.LaptopTest</mainClass>
                <mainClass>com.zahid.comparator.LaptopTest</mainClass>
                <mainClass>com.zahid.composition.DrivingTest</mainClass>
                <mainClass>com.zahid.constructor1.DefaultConstructor</mainClass>
                <mainClass>com.zahid.constructor1.ParamConstructor</mainClass>
                <mainClass>com.zahid.constructor1.ThisConstructor</mainClass>
                <mainClass>com.zahid.constructor2.ShirtTest</mainClass>
                <mainClass>com.zahid.cuboid.CuboidTest</mainClass>
                <mainClass>com.zahid.directory.DirectoryTest</mainClass>
                <mainClass>com.zahid.drinkable.LiquidTest</mainClass>
                <mainClass>com.zahid.encapsulation1.EncapTest</mainClass>
                <mainClass>com.zahid.encapsulation1.StudentTest</mainClass>
                <mainClass>com.zahid.enum1.EnumTest</mainClass>
                <mainClass>com.zahid.finalkeyword.FinalTest</mainClass>
                <mainClass>com.zahid.forest.ForestTest</mainClass>
                <mainClass>com.zahid.geometric.GeometricTest</mainClass>
                <mainClass>com.zahid.innerclass.InnerClassTest</mainClass>
                <mainClass>com.zahid.instanceofkeyword.InstanceTest</mainClass>
                <mainClass>com.zahid.interfaceimpl.wallet.PaymentTest</mainClass>
                <mainClass>com.zahid.interfaceimpl.misc.InterfaceTest1</mainClass>
                <mainClass>com.zahid.interfaceimpl.misc.InterfaceTest1</mainClass>
                <mainClass>com.zahid.methodoverloading.addition.AdditionTest</mainClass>
                <mainClass>com.zahid.methodoverloading.maxima.MaximaTest</mainClass>
                <mainClass>com.zahid.methodoverriding.OverridingTest</mainClass>
                <mainClass>com.zahid.multipleinheritance.InheritanceTest</mainClass>
                <mainClass>com.zahid.multipleinterface.InterfaceTest</mainClass>
                <mainClass>com.zahid.nullkeyword.NullKeywordTest</mainClass>
                <mainClass>com.zahid.objectvariable.ObjectTest</mainClass>
                <mainClass>com.zahid.point.PointTest</mainClass>
                <mainClass>com.zahid.polymorphism.PolymorphTest</mainClass>
                <mainClass>com.zahid.quadratic.QuadraticTest</mainClass>
                <mainClass>com.zahid.quadrilateral.QuadrilateralTest</mainClass>
                <mainClass>com.zahid.returnkeyword.ReturnTest</mainClass>
                <mainClass>com.zahid.shape.ShapeTest</mainClass>
                <mainClass>com.zahid.simpleinheritance.InheritanceTest</mainClass>
                <mainClass>com.zahid.spherical.SphericalTest</mainClass>
                <mainClass>com.zahid.statickeyword.StaticTest</mainClass>
                <mainClass>com.zahid.superkeyword.SuperTest1</mainClass>
                <mainClass>com.zahid.superkeyword.SuperTest2</mainClass>
                <mainClass>com.zahid.supersub.SuperSubTest</mainClass>
                <mainClass>com.zahid.thiskeyword.ThisTest</mainClass>
                <mainClass>com.zahid.triangle.TriangleTest</mainClass>
                <mainClass>com.zahid.upcastdowncast.CastingTest</mainClass>
            </configuration>
        </plugin>      
        
        <!-- # Maven Surefire Plugin for JUnit5 --> 
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>3.0.0-M5</version>
	    </plugin>
      </plugins> 
    </pluginManagement>
  </build>

  <dependencies>
    <!-- # Dependency for JUnit5 -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
    </dependency>
    
    <!-- https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api -->
    <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.jupiter.version}</version>
        <scope>test</scope>
    </dependency>  
  </dependencies>
</project>
